akka {
  loglevel = DEBUG

  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
    //"akka.remote.RemoteActorRefProvider"

    serializers= {
      java = "akka.serialization.JavaSerializer"
      proto = "akka.remote.serialization.ProtobufSerializer"
      byte = "akka.serialization.ByteArraySerializer"
    }
    serialization-bindings {
      "java.lang.String" = java
    }
  }
  remote {
    enabled-transports = ["akka.remote.netty.tcp"]
    netty.tcp {
      hostname = "127.0.0.1"  //${?CUSTOMERMIND_LOCALHOST} //"192.168.59.103"
      port = 5000

      //bind-hostname = "192.168.59.103" # internal (bind) hostname
      //bind-port = 2377                 # internal (bind) port

      log-received-messages = on
      log-sent-messages = on
      log-remote-lifecycle-events = on
    }

    # How often keep-alive heartbeat messages should be sent to each connection.
    heartbeat-interval = 4s

    # Number of potentially lost/delayed heartbeats that will be
    # accepted before considering it to be an anomaly.
    # A margin to the `heartbeat-interval` is important to be able to survive sudden,
    # occasional, pauses in heartbeat arrivals, due to for example garbage collect or
    # network drop.
    acceptable-heartbeat-pause = 10s
  }

  cluster {
    seed-nodes =[
      "akka.tcp://ClusterSystem@127.0.0.1:5000",
      "akka.tcp://ClusterSystem@127.0.0.1:4000"]

    roles = ["pipe_transformer"]
    auto-down-unreachable-after = 10s

    failure-detector {
      heartbeat-interval = 5s  # default 4s
      acceptable-heartbeat-pause = 30s  # default 10s
    }
  }
}

transformer_app {
  analyzers {
    analyzers_host = "127.0.0.1"  //${?CUSTOMERMIND_ANALYZER_HOST}
    analyzers_port = "2555" //${?ANALYZERS_PORT_2555_TCP_PORT}
  }
}