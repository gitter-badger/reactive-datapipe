akka {
  actor {
    provider = "akka.remote.RemoteActorRefProvider" //"akka.cluster.ClusterActorRefProvider"
    serializers= {
      java = "akka.serialization.JavaSerializer"
      proto = "akka.remote.serialization.ProtobufSerializer"
    }
    serialization-bindings {
      "java.lang.String" = java
    }
  }
  remote {
    enabled-transports = ["akka.remote.netty.tcp"]
    netty.tcp {
      hostname = "127.0.0.1"  //${?CUSTOMERMIND_LOCALHOST} //"192.168.59.103"
      port = 3000

      //bind-hostname = "192.168.59.103" # internal (bind) hostname
      //bind-port = 2377                 # internal (bind) port

      log-received-messages = on
      log-sent-messages = on
      log-remote-lifecycle-events = on
    }
  }

  cluster {
    seed-nodes = [
      "akka.tcp://ClusterSystem@127.0.0.1:2551"
      "akka.tcp://ClusterSystem@127.0.0.1:2552"]

    roles = ["publisher"]

    auto-down-unreachable-after = 10s

    failure-detector {
      heartbeat-interval = 20 s   # default 4s
      acceptable-heartbeat-pause = 10 s  # default 10s
    }

  }
}

publisher_app {
  destinations{
    jms {
      rabbit {
        username = "guest"
        password = "guest"
        host = "localhost"
        port = 5672

        front-channel {
          queue = "frontQ"
          exchange = "target"
          routingKey = "front"
        }
        engagement-channel {
          queue = "engagementQ"
          exchange = "target"
          routingKey = "engagement"
        }
        transform-channel {
          queue = "transformQ"
          exchange = "target"
          routingKey = "transform"
        }
      }
    }

    nlp{

    }


  }

}